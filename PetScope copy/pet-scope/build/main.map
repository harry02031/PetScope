{"version":3,"sources":["webpack:///webpack/bootstrap 9e4f42b09a252394cc67","webpack:///external \"express\"","webpack:///./server/configs/sequelize.js","webpack:///external \"body-parser\"","webpack:///./server/index.js","webpack:///external \"nuxt\"","webpack:///./server/api/index.js","webpack:///./server/api/users.js","webpack:///external \"sequelize\"","webpack:///./server/api/lost.js","webpack:///./server/api/main.js","webpack:///external \"fs\"","webpack:///./server/api/shelters.js","webpack:///./nuxt.config.js"],"names":["Sequelize","require","sequelize","process","env","DB_NAME","DB_USER","DB_PASSWORD","host","DB_HOST","port","parseInt","DB_PORT","dialect","pool","max","min","idle","define","timestamps","module","exports","app","express","HOST","PORT","set","use","config","dev","nuxt","builder","build","render","listen","console","log","router","Router","connection","bodyParser","get","req","res","next","query","type","QueryTypes","SELECT","then","users","json","post","userid","body","data","username","password","UPDATE","replacements","send","phoneNumber","query1","query2","INSERT","params","user","length","autoHeader","headers","undefined","split","header","user_pass","Buffer","from","toString","status","result","pid","date","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","day","hh","getHours","mins","getMinutes","ss","getSeconds","time","DELETE","lost","pet","catch","err","reward","sightings","lat","lostLat","lon","lostLong","radius","species","breed","name","sex","dob","birthDate","lostTime","lostDate","long","uid","query3","query4","error","response","errors","latitude","longitude","desc","description","shelters","postalCode","postalcode","agencyname","usernames","agency","head","title","meta","charset","content","hid","link","rel","href","css","vendor","extend","ctx","isClient","rules","push","enforce","test","loader","exclude","modules"],"mappings":";;;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AC7DA,oC;;;;;;ACAA,IAAMA,YAAY,mBAAAC,CAAQ,CAAR,CAAlB;;AAEA,IAAMC,YAAY,IAAIF,SAAJ,CAChBG,QAAQC,GAAR,CAAYC,OAAZ,IAAuB,UADP,EAEhBF,QAAQC,GAAR,CAAYE,OAAZ,IAAuB,UAFP,EAGhBH,QAAQC,GAAR,CAAYG,WAAZ,IAA2B,kCAHX,EAIhB;AACEC,QAAML,QAAQC,GAAR,CAAYK,OAAZ,IAAuB,2BAD/B;AAEEC,QAAMC,SAASR,QAAQC,GAAR,CAAYQ,OAArB,KAAiC,IAFzC;AAGEC,WAAS,UAHX;AAIEC,QAAM;AACJC,SAAK,EADD;AAEJC,SAAK,CAFD;AAGJC,UAAM;AAHF,GAJR;AASEC,UAAQ;AACNC,gBAAY;AADN;AATV,CAJgB,CAAlB;;AAmBAC,OAAOC,OAAP,GAAiBnB,SAAjB,C;;;;;;ACrBA,wC;;;;;;;;;;;;;ACAA;AACA;;AAEA;;AAEA,IAAMoB,MAAM,+CAAAC,EAAZ;AACA,IAAMf,OAAOL,QAAQC,GAAR,CAAYoB,IAAZ,IAAoB,WAAjC;AACA,IAAMd,OAAOP,QAAQC,GAAR,CAAYqB,IAAZ,IAAoB,IAAjC;;AAEAH,IAAII,GAAJ,CAAQ,MAAR,EAAgBhB,IAAhB;;AAEA;AACAY,IAAIK,GAAJ,CAAQ,MAAR,EAAgB,qDAAhB;;AAEA;AACA,IAAIC,SAAS,mBAAA3B,CAAQ,EAAR,CAAb;AACA2B,OAAOC,GAAP,GAAa,EAAE,kBAAyB,YAA3B,CAAb;;AAEA;AACA,IAAMC,OAAO,IAAI,0CAAJ,CAASF,MAAT,CAAb;;AAEA;AACA,IAAIA,OAAOC,GAAX,EAAgB;AACd,MAAME,UAAU,IAAI,6CAAJ,CAAYD,IAAZ,CAAhB;AACAC,UAAQC,KAAR;AACD;;AAED;AACAV,IAAIK,GAAJ,CAAQG,KAAKG,MAAb;;AAEA;AACAX,IAAIY,MAAJ,CAAWxB,IAAX,EAAiBF,IAAjB;AACA2B,QAAQC,GAAR,CAAY,yBAAyB5B,IAAzB,GAAgC,GAAhC,GAAsCE,IAAlD,E,CAAwD,iC;;;;;;AChCxD,iC;;;;;;;;;;;;;ACAA;;AAEA;AACA;AACA;AACA;;AAEA,IAAM2B,SAAS,uDAAAC,EAAf;;AAEAD,OAAOV,GAAP,CAAW,uDAAX;AACAU,OAAOV,GAAP,CAAW,sDAAX;AACAU,OAAOV,GAAP,CAAW,sDAAX;AACAU,OAAOV,GAAP,CAAW,0DAAX;;AAEA,yDAAeU,MAAf,E;;;;;;;;;ACdA;AACA,IAAIE,aAAa,mBAAAtC,CAAQ,CAAR,CAAjB;AACA,IAAMuC,aAAa,mBAAAvC,CAAQ,CAAR,CAAnB;;AAEA,IAAMoC,SAAS,uDAAAC,EAAf;;AAEA;AACAD,OAAOI,GAAP,CAAW,QAAX,EAAqB,UAAUC,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AAC7C,MAAMC,QAAQ,4BAAd;AACAN,aAAWM,KAAX,CAAiBA,KAAjB,EAAwB,EAAEC,MAAMP,WAAWQ,UAAX,CAAsBC,MAA9B,EAAxB,EACGC,IADH,CACQ,iBAAS;AACbd,YAAQC,GAAR,CAAYc,KAAZ;AACAP,QAAIQ,IAAJ,CAASD,KAAT;AACD,GAJH;AAKD,CAPD;;AASAb,OAAOe,IAAP,CAAY,eAAZ,EAA6BZ,WAAWW,IAAX,EAA7B,EAAgD,UAAUT,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AACxE,MAAMS,SAASX,IAAIY,IAAJ,CAASC,IAAT,CAAcF,MAA7B;AACA,MAAMG,WAAWd,IAAIY,IAAJ,CAASC,IAAT,CAAcC,QAA/B;AACA,MAAMC,WAAWf,IAAIY,IAAJ,CAASC,IAAT,CAAcE,QAA/B;;AAEA,MAAMZ,QAAQ,sFAAd;AACAN,aAAWM,KAAX,CAAiBA,KAAjB,EACE;AACEC,UAAMP,WAAWQ,UAAX,CAAsBW,MAD9B;AAEEC,kBAAc;AACZH,gBAAUA,QADE;AAEZC,gBAAUA,QAFE;AAGZJ,cAAQA;AAHI;AAFhB,GADF,EASGJ,IATH,CASQ,kBAAU;AACd;AACAN,QAAIiB,IAAJ,CAAS,GAAT;AACD,GAZH;AAaD,CAnBD;;AAqBAvB,OAAOe,IAAP,CAAY,YAAZ,EAA0BZ,WAAWW,IAAX,EAA1B,EAA6C,UAAUT,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AACrE,MAAMY,WAAWd,IAAIY,IAAJ,CAASC,IAAT,CAAcC,QAA/B;AACA,MAAMC,WAAWf,IAAIY,IAAJ,CAASC,IAAT,CAAcE,QAA/B;AACA,MAAMI,cAAcnB,IAAIY,IAAJ,CAASC,IAAT,CAAcM,WAAlC;;AAEA,MAAMC,SAAS,mFAAf;AACA,MAAMC,SAAS,8FAAf;AACAxB,aAAWM,KAAX,CAAiBiB,MAAjB,EACE;AACEhB,UAAMP,WAAWQ,UAAX,CAAsBiB,MAD9B;AAEEL,kBAAc;AACZE,mBAAaA;AADD;AAFhB,GADF,EAOGZ,IAPH,CAOQ,kBAAU;AACdV,eAAWM,KAAX,CAAiBkB,MAAjB,EACE;AACEjB,YAAMP,WAAWQ,UAAX,CAAsBiB,MAD9B;AAEEL,oBAAc;AACZH,kBAAUA,QADE;AAEZC,kBAAUA,QAFE;AAGZI,qBAAaA;AAHD;AAFhB,KADF,EAQKZ,IARL,CAQU,kBAAU;AAChB;AACAN,UAAIiB,IAAJ,CAAS,QAAT;AACD,KAXH;AAYD,GApBH;AAqBD,CA5BD;;AA8BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACAvB,OAAOI,GAAP,CAAW,kBAAX,EAA+B,UAAUC,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AACvD,MAAMY,WAAWd,IAAIuB,MAAJ,CAAWT,QAA5B;AACArB,UAAQC,GAAR,CAAY,eAAeoB,QAA3B;AACA,MAAMX,QAAQ,kDAAd;AACAN,aAAWM,KAAX,CAAiBA,KAAjB,EACE;AACEC,UAAMP,WAAWQ,UAAX,CAAsBC,MAD9B;AAEEW,kBAAc;AACZH,gBAAUA;AADE;AAFhB,GADF,EAOGP,IAPH,CAOQ,gBAAQ;AACZ,QAAIiB,KAAKC,MAAL,KAAgB,CAApB,EAAuB;AACrB,UAAMV,WAAWS,KAAK,CAAL,EAAQT,QAAzB;AACAtB,cAAQC,GAAR,CAAY8B,IAAZ;AACA/B,cAAQC,GAAR,CAAY,eAAeqB,QAA3B;AACA,UAAIW,aAAa1B,IAAI2B,OAAJ,CAAY,eAAZ,CAAjB;AACA,UAAID,eAAeE,SAAf,IAA4BF,WAAWG,KAAX,CAAiB,GAAjB,EAAsB,CAAtB,MAA6B,OAA7D,EAAsE;AACpE5B,YAAI6B,MAAJ,CAAW,kBAAX,EAA+B,2BAA/B;AACA7B,YAAIiB,IAAJ,CAAS,GAAT;AACA,eAAOhB,MAAP;AACD;AACD,UAAI6B,YAAYC,OAAOC,IAAP,CAAYP,WAAWG,KAAX,CAAiB,GAAjB,EAAsB,CAAtB,CAAZ,EAAsC,QAAtC,EAAgDK,QAAhD,EAAhB;AACAzC,cAAQC,GAAR,CAAYqC,SAAZ;AACA,UAAIA,cAAcjB,WAAW,GAAX,GAAiBC,QAAnC,EAA6C;AAC3Cd,YAAI6B,MAAJ,CAAW,kBAAX,EAA+B,+BAA/B;AACA7B,YAAIiB,IAAJ,CAAS,GAAT;AACA,eAAOhB,MAAP;AACD;AACDD,UAAIQ,IAAJ,CAASe,KAAK,CAAL,CAAT;AACD,KAlBD,MAkBO;AACLvB,UAAIkC,MAAJ,CAAW,GAAX,EAAgB1B,IAAhB,CAAqB,EAArB;AACD;AACF,GA7BH;AA8BD,CAlCD;;AAoCAd,OAAOe,IAAP,CAAY,kBAAZ,EAAgCZ,WAAWW,IAAX,EAAhC,EAAmD,UAAUT,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AAC3E;AACA,MAAMY,WAAWd,IAAIuB,MAAJ,CAAWT,QAA5B;AACA;AACA,MAAI,CAACd,IAAIY,IAAJ,CAASC,IAAd,EAAoB;AAClB,QAAMV,QAAQ,qGAAd;AACAN,eAAWM,KAAX,CAAiBA,KAAjB,EACE;AACEC,YAAMP,WAAWQ,UAAX,CAAsBW,MAD9B;AAEEC,oBAAc;AACZH,kBAAUA;AADE;AAFhB,KADF,EAOGP,IAPH,CAOQ,kBAAU;AACdd,cAAQC,GAAR,CAAY0C,MAAZ;AACAnC,UAAIQ,IAAJ,CAAS2B,OAAO,CAAP,CAAT;AACD,KAVH;AAWD,GAbD,MAaO;AACL,QAAMC,MAAMrC,IAAIY,IAAJ,CAASC,IAAT,CAAcwB,GAA1B;AACA,QAAMC,OAAO,IAAIC,IAAJ,EAAb;AACA,QAAMC,KAAKF,KAAKG,OAAL,EAAX;AACA,QAAIC,WAAJ;AACA,QAAIJ,KAAKK,QAAL,GAAgB,EAApB,EAAwB;AACtBD,WAAK,MAAMJ,KAAKK,QAAL,EAAN,GAAwB,CAA7B;AACD,KAFD,MAEO;AACLD,WAAKJ,KAAKK,QAAL,KAAkB,CAAvB;AACD;AACD,QAAMC,OAAON,KAAKO,WAAL,EAAb;AACA,QAAMC,MAAMF,OAAO,GAAP,GAAaF,EAAb,GAAkB,GAAlB,GAAwBF,EAApC;AACA,QAAIO,KAAKT,KAAKU,QAAL,EAAT;AACA,QAAIC,OAAOX,KAAKY,UAAL,EAAX;AACA,QAAIC,KAAKb,KAAKc,UAAL,EAAT;AACA,QAAIL,KAAK,EAAT,EAAa;AACXA,WAAK,MAAMA,EAAX;AACD;AACD,QAAIE,OAAO,EAAX,EAAe;AACbA,aAAO,MAAMA,IAAb;AACD;AACD,QAAIE,KAAK,EAAT,EAAa;AACXA,WAAK,MAAMA,EAAX;AACD;AACD,QAAME,OAAON,KAAK,GAAL,GAAWE,IAAX,GAAkB,GAAlB,GAAwBE,EAArC;AACA,QAAMhD,SAAQ,2FACZ,uBADF;AAEAN,eAAWM,KAAX,CAAiBA,MAAjB,EACE;AACEC,YAAMP,WAAWQ,UAAX,CAAsBiD,MAD9B;AAEErC,oBAAc;AACZoB,aAAKA,GADO;AAEZS,aAAKA,GAFO;AAGZO,cAAMA;AAHM;AAFhB,KADF,EASG9C,IATH,CASQ,kBAAU;AACd;AACA;AACAN,UAAIQ,IAAJ,CAAS2B,MAAT;AACD,KAbH;AAcD;AACF,CA3DD;;AA6DAzC,OAAOe,IAAP,CAAY,QAAZ,EAAsBZ,WAAWW,IAAX,EAAtB,EAAyC,UAAUT,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AACjE,MAAMS,SAASX,IAAIY,IAAJ,CAASC,IAAT,CAAcF,MAA7B;AACA,MAAMR,QAAQ,2CAAd;AACAN,aAAWM,KAAX,CAAiBA,KAAjB,EACE;AACEC,UAAMP,WAAWQ,UAAX,CAAsBiD,MAD9B;AAEErC,kBAAc;AACZN,cAAQA;AADI;AAFhB,GADF,EAOGJ,IAPH,CAOQ,kBAAU;AACd;AACAN,QAAIiB,IAAJ,CAASlB,IAAID,GAAJ,CAAQ,SAAR,CAAT;AACD,GAVH;AAWD,CAdD;;AAgBA,yDAAeJ,MAAf,E;;;;;;AC3MA,sC;;;;;;;;;ACAA;AACA,IAAIE,aAAa,mBAAAtC,CAAQ,CAAR,CAAjB;AACA,IAAMuC,aAAa,mBAAAvC,CAAQ,CAAR,CAAnB;;AAEA,IAAMoC,SAAS,uDAAAC,EAAf;;AAEA;AACAD,OAAOI,GAAP,CAAW,OAAX,EAAoB,UAAUC,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AAC5C,MAAMC,QAAQ,mDAAd;AACAN,aAAWM,KAAX,CAAiBA,KAAjB,EAAwB,EAAEC,MAAMP,WAAWQ,UAAX,CAAsBC,MAA9B,EAAxB,EACGC,IADH,CACQ,gBAAQ;AACZ;AACAN,QAAIQ,IAAJ,CAAS8C,IAAT;AACD,GAJH;AAKD,CAPD;;AASA;AACA;;;;;;;;;;;;;;AAcA5D,OAAOI,GAAP,CAAW,YAAX,EAAyB,UAAUC,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AACjD,MAAMmC,MAAMrC,IAAIuB,MAAJ,CAAWc,GAAvB;AACA,MAAMlC,QAAQ,sEAAd;AACAN,aAAWM,KAAX,CAAiBA,KAAjB,EACE;AACEC,UAAMP,WAAWQ,UAAX,CAAsBC,MAD9B;AAEEW,kBAAc;AACZoB,WAAKA;AADO;AAFhB,GADF,EAOG9B,IAPH,CAOQ,eAAO;AACX,QAAIiD,IAAI/B,MAAJ,KAAe,CAAnB,EAAuB;AACrBhC,cAAQC,GAAR,CAAY8D,GAAZ;AACAvD,UAAIQ,IAAJ,CAAS+C,IAAI,CAAJ,CAAT;AACD,KAHD,MAGO;AACLvD,UAAIkC,MAAJ,CAAW,GAAX,EAAgB1B,IAAhB,CAAqB,EAArB;AACD;AACF,GAdH,EAeGgD,KAfH,CAeS,UAASC,GAAT,EAAc;AACnBjE,YAAQC,GAAR,CAAYgE,GAAZ,EAAiB,IAAjB;AACD,GAjBH;AAkBD,CArBD;;AAuBA;AACA/D,OAAOI,GAAP,CAAW,0BAAX,EAAuC,UAAUC,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AAC/D,MAAMC,QAAQ,wIAAd;AACAN,aAAWM,KAAX,CAAiBA,KAAjB,EAAwB,EAAEC,MAAMP,WAAWQ,UAAX,CAAsBC,MAA9B,EAAxB,EACGC,IADH,CACQ,kBAAU;AACdd,YAAQC,GAAR,CAAYiE,MAAZ;AACA1D,QAAIQ,IAAJ,CAASkD,MAAT;AACD,GAJH;AAKD,CAPD;;AASAhE,OAAOI,GAAP,CAAW,0BAAX,EAAuC,UAAUC,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AAC/D,MAAMmC,MAAMrC,IAAIuB,MAAJ,CAAWc,GAAvB;AACA,MAAMlC,QAAQ,mDAAd;AACAN,aAAWM,KAAX,CAAiBA,KAAjB,EACE;AACEC,UAAMP,WAAWQ,UAAX,CAAsBC,MAD9B;AAEEW,kBAAc;AACZoB,WAAKA;AADO;AAFhB,GADF,EAOG9B,IAPH,CAOQ,qBAAa;AACjBd,YAAQC,GAAR,CAAY,eAAZ;AACAD,YAAQC,GAAR,CAAYkE,SAAZ;AACA3D,QAAIQ,IAAJ,CAASmD,SAAT;AACD,GAXH,EAYGH,KAZH,CAYS,UAASC,GAAT,EAAc;AACnBjE,YAAQC,GAAR,CAAYgE,GAAZ,EAAiB,IAAjB;AACD,GAdH;AAeD,CAlBD;AAmBA;;;;;;;;;;;;;;;;;;;;;;;AAuBA/D,OAAOe,IAAP,CAAY,mBAAZ,EAAiCZ,WAAWW,IAAX,EAAjC,EAAoD,UAAUT,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AAC5E,MAAMmC,MAAMrC,IAAIuB,MAAJ,CAAWc,GAAvB;AACA,MAAMlC,QAAQ,oCAAd;AACAN,aAAWM,KAAX,CAAiBA,KAAjB,EAAwB;AACtBC,UAAMP,WAAWQ,UAAX,CAAsBiD,MADN;AAEtBrC,kBAAc;AACboB,WAAKA;AADQ;AAFQ,GAAxB,EAMG9B,IANH,CAMQ,gBAAQ;AACZd,YAAQC,GAAR,CAAY6D,IAAZ;AACAtD,QAAIQ,IAAJ,CAAS8C,IAAT;AACD,GATH;AAUD,CAbD;;AAeA5D,OAAOe,IAAP,CAAY,OAAZ,EAAqBZ,WAAWW,IAAX,EAArB,EAAwC,UAAUT,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AAChE;AACA;AACA,MAAM2D,MAAM7D,IAAIY,IAAJ,CAASC,IAAT,CAAciD,OAA1B;AACA,MAAMC,MAAM/D,IAAIY,IAAJ,CAASC,IAAT,CAAcmD,QAA1B;AACA,MAAMC,SAASjE,IAAIY,IAAJ,CAASC,IAAT,CAAcoD,MAA7B;AACA,MAAM9D,QAAQ,wHACE,mBADhB;AAEAN,aAAWM,KAAX,CAAiBA,KAAjB,EAAwB;AACtBC,UAAMP,WAAWQ,UAAX,CAAsBC,MADN;AAEtBW,kBAAc;AACZ4C,WAAKA,GADO;AAEZE,WAAKA,GAFO;AAGZE,cAAQA;AAHI;AAFQ,GAAxB,EAQG1D,IARH,CAQQ,gBAAQ;AACZd,YAAQC,GAAR,CAAY6D,IAAZ;AACAtD,QAAIQ,IAAJ,CAAS8C,IAAT;AACD,GAXH;AAYE;AACA;AACA;AACA;AACH,CAxBD;;AA0BA5D,OAAOe,IAAP,CAAY,WAAZ,EAAyBZ,WAAWW,IAAX,EAAzB,EAA4C,UAAUT,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AACpET,UAAQC,GAAR,CAAYM,IAAIY,IAAJ,CAASC,IAArB;AACA,MAAMqD,UAAUlE,IAAIY,IAAJ,CAASC,IAAT,CAAcqD,OAA9B;AACA,MAAMC,QAAQnE,IAAIY,IAAJ,CAASC,IAAT,CAAcsD,KAA5B;AACA,MAAMC,OAAOpE,IAAIY,IAAJ,CAASC,IAAT,CAAcuD,IAA3B;AACA,MAAMC,MAAMrE,IAAIY,IAAJ,CAASC,IAAT,CAAcwD,GAA1B;AACA,MAAMC,MAAMtE,IAAIY,IAAJ,CAASC,IAAT,CAAc0D,SAA1B;AACA,MAAMlB,OAAOrD,IAAIY,IAAJ,CAASC,IAAT,CAAc2D,QAA3B;AACA,MAAMlC,OAAOtC,IAAIY,IAAJ,CAASC,IAAT,CAAc4D,QAA3B;AACA,MAAMZ,MAAM7D,IAAIY,IAAJ,CAASC,IAAT,CAAciD,OAA1B;AACA,MAAMY,OAAO1E,IAAIY,IAAJ,CAASC,IAAT,CAAcmD,QAA3B;AACA,MAAML,SAAS3D,IAAIY,IAAJ,CAASC,IAAT,CAAc8C,MAA7B;AACA,MAAMgB,MAAM3E,IAAIY,IAAJ,CAASC,IAAT,CAAc8D,GAA1B;;AAEAlF,UAAQC,GAAR,CAAY,oBAAZ;;AAEA,MAAMS,QAAQ,mGAAd;AACA,MAAMkB,SAAS,sHAAf;AACA,MAAMuD,SAAS,uIAAf;AACA,MAAMC,SAAS,kGAAf;AACAhF,aAAWM,KAAX,CAAiBA,KAAjB,EACE;AACEC,UAAMP,WAAWQ,UAAX,CAAsBiB,MAD9B;AAEEL,kBAAc;AACZiD,eAASA,OADG;AAEZC,aAAOA;AAFK;AAFhB,GADF,EAQG5D,IARH,CAQQ,kBAAU;AACdV,eAAWM,KAAX,CAAiBkB,MAAjB,EACA;AACEjB,YAAMP,WAAWQ,UAAX,CAAsBiB,MAD9B;AAEEL,oBAAc;AACZmD,cAAMA,IADM;AAEZC,aAAKA,GAFO;AAGZF,eAAOA,KAHK;AAIZG,aAAKA,GAJO;AAKZK,aAAKA;AALO;AAFhB,KADA,EAWCpE,IAXD,CAWM,kBAAU;AACdV,iBAAWM,KAAX,CAAiByE,MAAjB,EACA;AACExE,cAAMP,WAAWQ,UAAX,CAAsBiB,MAD9B;AAEEL,sBAAc;AACZmD,gBAAMA,IADM;AAEZ9B,gBAAMA,IAFM;AAGZe,gBAAMA,IAHM;AAIZQ,eAAKA,GAJO;AAKZa,gBAAMA;AALM;AAFhB,OADA,EAWCnE,IAXD,CAWM,kBAAU;AACdV,mBAAWM,KAAX,CAAiB0E,MAAjB,EACE;AACEzE,gBAAMP,WAAWQ,UAAX,CAAsBiB,MAD9B;AAEEL,wBAAc;AACZ0C,oBAAQA,MADI;AAEZgB,iBAAKA;AAFO;AAFhB,SADF,EAOKpE,IAPL,CAOW,kBAAU;AAACN,cAAIiB,IAAJ,CAAS,OAAT;AAAkB,SAPxC;AAQD,OApBD;AAqBD,KAjCD;AAkCD,GA3CH,EA4CGuC,KA5CH,CA4CU,iBAAS;AACfhE,YAAQC,GAAR,CAAY,sBAAZ;AACAD,YAAQC,GAAR,CAAYoF,KAAZ;AAAmB,GA9CvB;AA+CD,CAnED;;AAqEAnF,OAAOI,GAAP,CAAW,qBAAX,EAAkC,UAAUC,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AAC1D,MAAMmC,MAAMrC,IAAIuB,MAAJ,CAAWc,GAAvB;AACA,MAAM0C,WAAW;AACfC,YAAQ,EADO;AAEfL,SAAK,EAFU;AAGftC,SAAKA,GAHU;AAIfC,UAAM,EAJS;AAKfe,UAAM,EALS;AAMf4B,cAAU,EANK;AAOfC,eAAW;AAPI,GAAjB;AASAjF,MAAIQ,IAAJ,CAAUsE,QAAV;AACD,CAZD;;AAcApF,OAAOe,IAAP,CAAY,gBAAZ,EAA8BZ,WAAWW,IAAX,EAA9B,EAAiD,UAAUT,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AACzET,UAAQC,GAAR,CAAY,aAAZ;AACAD,UAAQC,GAAR,CAAYM,IAAIY,IAAJ,CAASC,IAArB;AACA,MAAM8D,MAAM3E,IAAIY,IAAJ,CAASC,IAAT,CAAc8D,GAA1B;AACA,MAAMtC,MAAMrC,IAAIY,IAAJ,CAASC,IAAT,CAAcwB,GAA1B;AACA,MAAMgB,OAAOrD,IAAIY,IAAJ,CAASC,IAAT,CAAcwC,IAA3B;AACA,MAAMf,OAAOtC,IAAIY,IAAJ,CAASC,IAAT,CAAcyB,IAA3B;AACA,MAAMuB,MAAM7D,IAAIY,IAAJ,CAASC,IAAT,CAAcoE,QAA1B;AACA,MAAMP,OAAO1E,IAAIY,IAAJ,CAASC,IAAT,CAAcqE,SAA3B;AACA,MAAMC,OAAOnF,IAAIY,IAAJ,CAASC,IAAT,CAAcuE,WAA3B;AACA,MAAMjF,QAAQ,6HAAd;AACAN,aAAWM,KAAX,CAAiBA,KAAjB,EAAwB;AACtBC,UAAMP,WAAWQ,UAAX,CAAsBiB,MADN;AAEtBL,kBAAc;AACZqB,YAAMA,IADM;AAEZe,YAAMA,IAFM;AAGZQ,WAAKA,GAHO;AAIZa,YAAMA,IAJM;AAKZS,YAAMA,IALM;AAMZR,WAAKA,GANO;AAOZtC,WAAKA;AAPO;AAFQ,GAAxB,EAYG9B,IAZH,CAYQ,gBAAQ;AACZd,YAAQC,GAAR,CAAY6D,IAAZ;AACAtD,QAAIQ,IAAJ,CAAS8C,IAAT;AACD,GAfH;AAgBE;AACA;AACA;AACA;AACH,CA/BD;;AAiCA,yDAAe5D,MAAf,E;;;;;;;;;;;ACvQA;AACA;AACA,IAAIE,aAAa,mBAAAtC,CAAQ,CAAR,CAAjB;AACA,IAAMuC,aAAa,mBAAAvC,CAAQ,CAAR,CAAnB;;AAEA,IAAMoC,SAAS,uDAAAC,EAAf;;AAEA;AACAD,OAAOI,GAAP,CAAW,QAAX,EAAqB,UAAUC,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AAC7C,MAAMC,QAAQ,sBAAd;AACAN,aAAWM,KAAX,CAAiBA,KAAjB,EAAwB,EAAEC,MAAMP,WAAWQ,UAAX,CAAsBC,MAA9B,EAAxB,EACGC,IADH,CACQ,iBAAS;AACbd,YAAQC,GAAR,CAAYc,KAAZ;AACAP,QAAIQ,IAAJ,CAASD,KAAT;AACD,GAJH;AAKD,CAPD;;AASAb,OAAOI,GAAP,CAAW,SAAX,EAAsB,UAAUC,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AAC9C,MAAIwB,aAAa1B,IAAI2B,OAAJ,CAAY,eAAZ,CAAjB;AACA,MAAID,eAAeE,SAAf,IAA4BF,WAAWG,KAAX,CAAiB,GAAjB,EAAsB,CAAtB,MAA6B,OAA7D,EAAsE;AACpE5B,QAAI6B,MAAJ,CAAW,kBAAX,EAA+B,2BAA/B;AACA7B,QAAIiB,IAAJ,CAAS,GAAT;AACA,WAAOhB,MAAP;AACD;AACD,MAAI6B,YAAYC,OAAOC,IAAP,CAAYP,WAAWG,KAAX,CAAiB,GAAjB,EAAsB,CAAtB,CAAZ,EAAsC,QAAtC,EAAgDK,QAAhD,EAAhB;AACA,MAAMpB,WAAWiB,UAAUF,KAAV,CAAgB,GAAhB,EAAqB,CAArB,CAAjB;AACA,MAAM1B,QAAQ,kDAAd;AACAN,aAAWM,KAAX,CAAiBA,KAAjB,EACE;AACEC,UAAMP,WAAWQ,UAAX,CAAsBC,MAD9B;AAEEW,kBAAc;AACZH,gBAAUA;AADE;AAFhB,GADF,EAOGP,IAPH,CAOQ,gBAAQ;AACZ,QAAIiB,KAAKC,MAAL,KAAgB,CAApB,EAAuB;AACrB,UAAMV,WAAWS,KAAK,CAAL,EAAQT,QAAzB;AACA,UAAIgB,cAAcjB,WAAW,GAAX,GAAiBC,QAAnC,EAA6C;AAC3Cd,YAAI6B,MAAJ,CAAW,kBAAX,EAA+B,+BAA/B;AACA7B,YAAIiB,IAAJ,CAAS,GAAT;AACA,eAAOhB,MAAP;AACD;AACDD,UAAIQ,IAAJ,CAASK,QAAT;AACD,KARD,MAQO;AACLb,UAAIkC,MAAJ,CAAW,GAAX,EAAgB1B,IAAhB,CAAqB,EAArB;AACD;AACF,GAnBH;AAoBD,CA9BD;;AAgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAd,OAAOe,IAAP,CAAY,eAAZ,EAA6BZ,WAAWW,IAAX,EAA7B,EAAgD,UAAUT,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AACxE,MAAMS,SAASX,IAAIY,IAAJ,CAASC,IAAT,CAAcF,MAA7B;AACA,MAAMG,WAAWd,IAAIY,IAAJ,CAASC,IAAT,CAAcC,QAA/B;AACA,MAAMC,WAAWf,IAAIY,IAAJ,CAASC,IAAT,CAAcE,QAA/B;;AAEA,MAAMZ,QAAQ,sFAAd;AACAN,aAAWM,KAAX,CAAiBA,KAAjB,EACE;AACEC,UAAMP,WAAWQ,UAAX,CAAsBW,MAD9B;AAEEC,kBAAc;AACZH,gBAAUA,QADE;AAEZC,gBAAUA,QAFE;AAGZJ,cAAQA;AAHI;AAFhB,GADF,EASGJ,IATH,CASQ,kBAAU;AACd;AACAN,QAAIiB,IAAJ,CAAS,QAAT;AACD,GAZH;AAaD,CAnBD;;AAqBAvB,OAAOe,IAAP,CAAY,OAAZ,EAAqBZ,WAAWW,IAAX,EAArB,EAAwC,UAAUT,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AAChE;AACA,MAAMC,QAAQ,iDAAgB,2BAAhB,EAA6C,OAA7C,CAAd;AACAN,aAAWM,KAAX,CAAiBA,KAAjB,EACE;AACEC,UAAMP,WAAWQ,UAAX,CAAsBiD;AAD9B,GADF,EAIG/C,IAJH,CAIQ,kBAAU;AACd;AACAN,QAAIiB,IAAJ,CAAS,GAAT;AACD,GAPH;AAQD,CAXD;;AAaAvB,OAAOe,IAAP,CAAY,YAAZ,EAA0BZ,WAAWW,IAAX,EAA1B,EAA6C,UAAUT,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AACrE,MAAMS,SAASX,IAAIY,IAAJ,CAASC,IAAT,CAAcF,MAA7B;AACA,MAAMG,WAAWd,IAAIY,IAAJ,CAASC,IAAT,CAAcC,QAA/B;AACA,MAAMC,WAAWf,IAAIY,IAAJ,CAASC,IAAT,CAAcE,QAA/B;;AAEA,MAAMZ,QAAQ,wEAAd;AACAN,aAAWM,KAAX,CAAiBA,KAAjB,EACE;AACEC,UAAMP,WAAWQ,UAAX,CAAsBiB,MAD9B;AAEEL,kBAAc;AACZH,gBAAUA,QADE;AAEZC,gBAAUA;AAFE;AAFhB,GADF,EAQGR,IARH,CAQQ,kBAAU;AACd;AACAN,QAAIiB,IAAJ,CAAS,QAAT;AACD,GAXH;AAYD,CAlBD;;AAoBA;AACAvB,OAAOI,GAAP,CAAW,iBAAX,EAA8B,UAAUC,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AACtD,MAAMC,QAAQ,oKAAd;AACAN,aAAWM,KAAX,CAAiBA,KAAjB,EAAwB,EAAEC,MAAMP,WAAWQ,UAAX,CAAsBC,MAA9B,EAAxB,EACGC,IADH,CACQ,kBAAU;AACdd,YAAQC,GAAR,CAAYiE,MAAZ;AACA1D,QAAIQ,IAAJ,CAASkD,MAAT;AACD,GAJH;AAKD,CAPD;;AASA,yDAAehE,MAAf,E;;;;;;ACrIA,+B;;;;;;;;;ACAA;AACA,IAAIE,aAAa,mBAAAtC,CAAQ,CAAR,CAAjB;AACA,IAAMuC,aAAa,mBAAAvC,CAAQ,CAAR,CAAnB;;AAEA,IAAMoC,SAAS,uDAAAC,EAAf;;AAEA;AACAD,OAAOI,GAAP,CAAW,WAAX,EAAwB,UAAUC,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AAChD,MAAMC,QAAQ,wBAAd;AACAN,aAAWM,KAAX,CAAiBA,KAAjB,EAAwB,EAAEC,MAAMP,WAAWQ,UAAX,CAAsBC,MAA9B,EAAxB,EACGC,IADH,CACQ,oBAAY;AAChBd,YAAQC,GAAR,CAAY2F,QAAZ;AACApF,QAAIQ,IAAJ,CAAS4E,QAAT;AACD,GAJH;AAKD,CAPD;;AASA1F,OAAOI,GAAP,CAAW,mCAAX,EAAgD,UAAUC,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AACxE,MAAMoF,aAAatF,IAAIuB,MAAJ,CAAWgE,UAA9B;AACA,MAAMC,aAAaxF,IAAIuB,MAAJ,CAAWiE,UAA9B;AACA/F,UAAQC,GAAR,CAAY,SAAS4F,UAAT,GAAsB,aAAtB,GAAsCE,UAAlD;AACA,MAAMrF,QAAQ,oDAAd;AACAN,aAAWM,KAAX,CAAiBA,KAAjB,EACE;AACEC,UAAMP,WAAWQ,UAAX,CAAsBC,MAD9B;AAEEW,kBAAc;AACZuE,kBAAYA;AADA;AAFhB,GADF,EAOGjF,IAPH,CAOQ,qBAAa;AACjBd,YAAQC,GAAR,CAAY+F,SAAZ;AACAxF,QAAIQ,IAAJ,CAASgF,SAAT;AACD,GAVH;AAWD,CAhBD;;AAkBA9F,OAAOe,IAAP,CAAY,mCAAZ,EAAiDZ,WAAWW,IAAX,EAAjD,EAAoE,UAAUT,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AAC5F,MAAMoF,aAAatF,IAAIuB,MAAJ,CAAWgE,UAA9B;AACA,MAAMC,aAAaxF,IAAIuB,MAAJ,CAAWiE,UAA9B;AACA,MAAMrB,QAAQnE,IAAIY,IAAJ,CAASC,IAAT,CAAcsD,KAA5B;AACA1E,UAAQC,GAAR,CAAY,SAAS4F,UAAT,GAAsB,aAAtB,GAAsCE,UAAtC,GAAmD,YAAnD,GAAkErB,KAA9E;AACA,MAAMhE,QAAQ,oEACE,oEADF,GAEE,kDAFhB;AAGAN,aAAWM,KAAX,CAAiBA,KAAjB,EACE;AACEC,UAAMP,WAAWQ,UAAX,CAAsBC,MAD9B;AAEEW,kBAAc;AACZkD,aAAOA,KADK;AAEZmB,kBAAYA,UAFA;AAGZE,kBAAYA;AAHA;AAFhB,GADF,EASGjF,IATH,CASQ,qBAAa;AACjBd,YAAQC,GAAR,CAAY+F,SAAZ;AACAxF,QAAIQ,IAAJ,CAASgF,SAAT;AACD,GAZH,EAaGhC,KAbH,CAaS,iBAAS;AACdhE,YAAQC,GAAR,CAAY,YAAYoF,KAAxB;AACD,GAfH;AAgBD,CAxBD;;AA0BA;AACAnF,OAAOI,GAAP,CAAW,uBAAX,EAAoC,UAAUC,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AAC5DT,UAAQC,GAAR,CAAY,qBAAZ;AACA,MAAM8F,aAAaxF,IAAIuB,MAAJ,CAAWiE,UAA9B;AACA,MAAMrF,QAAQ,uDAAd;AACAN,aAAWM,KAAX,CAAiBA,KAAjB,EACE;AACEC,UAAMP,WAAWQ,UAAX,CAAsBC,MAD9B;AAEEW,kBAAc;AACZuE,kBAAYA;AADA;AAFhB,GADF,EAOGjF,IAPH,CAOQ,kBAAU;AACdd,YAAQC,GAAR,CAAYgG,MAAZ;AACAzF,QAAIQ,IAAJ,CAASiF,MAAT;AACD,GAVH,EAWGjC,KAXH,CAWS,UAASC,GAAT,EAAc;AACnBjE,YAAQC,GAAR,CAAYgE,GAAZ,EAAiB,IAAjB;AACD,GAbH;AAcD,CAlBD;AAmBA;;;;;;;;;;;;;;;;;;;;;;;AAuBA/D,OAAOe,IAAP,CAAY,OAAZ,EAAqBZ,WAAWW,IAAX,EAArB,EAAwC,UAAUT,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AAChE;AACA;AACA,MAAM2D,MAAM7D,IAAIY,IAAJ,CAASC,IAAT,CAAciD,OAA1B;AACA,MAAMC,MAAM/D,IAAIY,IAAJ,CAASC,IAAT,CAAcmD,QAA1B;AACA,MAAMC,SAASjE,IAAIY,IAAJ,CAASC,IAAT,CAAcoD,MAA7B;AACA,MAAM9D,QAAQ,wHACE,mBADhB;AAEAN,aAAWM,KAAX,CAAiBA,KAAjB,EAAwB;AACtBC,UAAMP,WAAWQ,UAAX,CAAsBC,MADN;AAEtBW,kBAAc;AACZ4C,WAAKA,GADO;AAEZE,WAAKA,GAFO;AAGZE,cAAQA;AAHI;AAFQ,GAAxB,EAQG1D,IARH,CAQQ,gBAAQ;AACZd,YAAQC,GAAR,CAAY6D,IAAZ;AACAtD,QAAIQ,IAAJ,CAAS8C,IAAT;AACD,GAXH;AAYE;AACA;AACA;AACA;AACH,CAxBD;;AA0BA5D,OAAOe,IAAP,CAAY,WAAZ,EAAyBZ,WAAWW,IAAX,EAAzB,EAA4C,UAAUT,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AACpET,UAAQC,GAAR,CAAYM,IAAIY,IAAJ,CAASC,IAArB;AACA,MAAMwB,MAAMrC,IAAIY,IAAJ,CAASC,IAAT,CAAcwB,GAA1B;AACA,MAAM6B,UAAUlE,IAAIY,IAAJ,CAASC,IAAT,CAAcqD,OAA9B;AACA,MAAMC,QAAQnE,IAAIY,IAAJ,CAASC,IAAT,CAAcsD,KAA5B;AACA,MAAMC,OAAOpE,IAAIY,IAAJ,CAASC,IAAT,CAAcuD,IAA3B;AACA,MAAMC,MAAMrE,IAAIY,IAAJ,CAASC,IAAT,CAAcwD,GAA1B;;AAEA5E,UAAQC,GAAR,CAAY,oBAAZ;;AAEA,MAAMS,QAAQ,mGAAd;AACA,MAAMkB,SAAS,mEAAf;AACA,MAAMuD,SAAS,kFAAf;AACA/E,aAAWM,KAAX,CAAiBA,KAAjB,EACE;AACEC,UAAMP,WAAWQ,UAAX,CAAsBiB,MAD9B;AAEEL,kBAAc;AACZiD,eAASA,OADG;AAEZC,aAAOA;AAFK;AAFhB,GADF,EAQG5D,IARH,CAQQ,kBAAU;AACdV,eAAWM,KAAX,CAAiBkB,MAAjB,EACA;AACEjB,YAAMP,WAAWQ,UAAX,CAAsBiB,MAD9B;AAEEL,oBAAc;AACZmD,cAAMA,IADM;AAEZC,aAAKA,GAFO;AAGZF,eAAOA;AAHK;AAFhB,KADA,EASC5D,IATD,CASM,kBAAU;AACdV,iBAAWM,KAAX,CAAiByE,MAAjB,EACA;AACExE,cAAMP,WAAWQ,UAAX,CAAsBiB,MAD9B;AAEEL,sBAAc;AACZoB,eAAKA,GADO;AAEZ+B,gBAAMA;AAFM;AAFhB,OADA,EAQC7D,IARD,CAQM,kBAAU;AACd;AACAN,YAAIiB,IAAJ,CAAS,OAAT;AACD,OAXD;AAYD,KAtBD;AAuBD,GAhCH,EAiCGuC,KAjCH,CAiCU,iBAAS;AACfhE,YAAQC,GAAR,CAAY,sBAAZ;AACAD,YAAQC,GAAR,CAAYoF,KAAZ;AAAmB,GAnCvB;AAoCD,CAjDD;;AAmDA,yDAAenF,MAAf,E;;;;;;ACpLAjB,OAAOC,OAAP,GAAiB;AACf;;;AAGAgH,QAAM;AACJC,WAAO,SADH;AAEJC,UAAM,CACJ,EAAEC,SAAS,OAAX,EADI,EAEJ,EAAE1B,MAAM,UAAR,EAAoB2B,SAAS,qCAA7B,EAFI,EAGJ,EAAEC,KAAK,aAAP,EAAsB5B,MAAM,aAA5B,EAA2C2B,SAAS,iBAApD,EAHI,CAFF;AAOJE,UAAM,CACJ,EAAEC,KAAK,MAAP,EAAe9F,MAAM,cAArB,EAAqC+F,MAAM,cAA3C,EADI;AAPF,GAJS;AAef;;;AAGAC,OAAK,CAAC,uBAAD,CAlBU;AAmBf;;;AAGA9G,SAAO;AACL+G,YAAQ,CAAC,OAAD,CADH;AAEL;;;AAGAC,UALK,kBAKGpH,MALH,EAKWqH,GALX,EAKgB;AACnB,UAAIA,IAAIC,QAAR,EAAkB;AAChBtH,eAAOR,MAAP,CAAc+H,KAAd,CAAoBC,IAApB,CAAyB;AACvBC,mBAAS,KADc;AAEvBC,gBAAM,aAFiB;AAGvBC,kBAAQ,eAHe;AAIvBC,mBAAS;AAJc,SAAzB;AAMD;AACF;AAdI,GAtBQ;;AAuCfC,WAAS,CACP,aADO;AAvCM,CAAjB,C","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 9e4f42b09a252394cc67","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = 0\n// module chunks = 0","const Sequelize = require(\"sequelize\");\n\nconst sequelize = new Sequelize(\n  process.env.DB_NAME || \"wfnpzbqr\",\n  process.env.DB_USER || \"wfnpzbqr\",\n  process.env.DB_PASSWORD || \"hALj5TcckVdV29V8g30hiKumtCN7-AJc\",\n  {\n    host: process.env.DB_HOST || \"tantor.db.elephantsql.com\",\n    port: parseInt(process.env.DB_PORT) || 5432,\n    dialect: \"postgres\",\n    pool: {\n      max: 10,\n      min: 0,\n      idle: 30000\n    },\n    define: {\n      timestamps: false\n    }\n  }\n);\n\nmodule.exports = sequelize;\n\n\n\n// WEBPACK FOOTER //\n// ./server/configs/sequelize.js","module.exports = require(\"body-parser\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"body-parser\"\n// module id = 2\n// module chunks = 0","import express from 'express'\nimport { Nuxt, Builder } from 'nuxt'\n\nimport api from './api'\n\nconst app = express()\nconst host = process.env.HOST || '127.0.0.1'\nconst port = process.env.PORT || 3000\n\napp.set('port', port)\n\n// Import API Routes\napp.use('/api', api)\n\n// Import and Set Nuxt.js options\nlet config = require('../nuxt.config.js')\nconfig.dev = !(process.env.NODE_ENV === 'production')\n\n// Init Nuxt.js\nconst nuxt = new Nuxt(config)\n\n// Build only in dev mode\nif (config.dev) {\n  const builder = new Builder(nuxt)\n  builder.build()\n}\n\n// Give nuxt middleware to express\napp.use(nuxt.render)\n\n// Listen the server\napp.listen(port, host)\nconsole.log('Server listening on ' + host + ':' + port) // eslint-disable-line no-console\n\n\n\n// WEBPACK FOOTER //\n// ./server/index.js","module.exports = require(\"nuxt\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"nuxt\"\n// module id = 4\n// module chunks = 0","import { Router } from 'express'\n\nimport users from './users'\nimport lost from './lost'\nimport main from './main'\nimport shelters from './shelters'\n\nconst router = Router()\n\nrouter.use(users)\nrouter.use(lost)\nrouter.use(main)\nrouter.use(shelters)\n\nexport default router\n\n\n\n// WEBPACK FOOTER //\n// ./server/api/index.js","import { Router } from 'express'\nvar connection = require('../configs/sequelize')\nconst bodyParser = require('body-parser')\n\nconst router = Router()\n\n/* GET users listing. */\nrouter.get('/users', function (req, res, next) {\n  const query = 'SELECT * FROM publicinfo1;'\n  connection.query(query, { type: connection.QueryTypes.SELECT })\n    .then(users => {\n      console.log(users)\n      res.json(users)\n    })\n})\n\nrouter.post('/users/update', bodyParser.json(), function (req, res, next) {\n  const userid = req.body.data.userid\n  const username = req.body.data.username\n  const password = req.body.data.password\n\n  const query = 'UPDATE Users SET username = :username, password = :password WHERE userid = :userid ;'\n  connection.query(query,\n    {\n      type: connection.QueryTypes.UPDATE,\n      replacements: {\n        username: username,\n        password: password,\n        userid: userid\n      }\n    })\n    .then(result => {\n      // result[1] is the number of rows changed\n      res.send('/')\n    })\n})\n\nrouter.post('/users/add', bodyParser.json(), function (req, res, next) {\n  const username = req.body.data.username\n  const password = req.body.data.password\n  const phoneNumber = req.body.data.phoneNumber\n\n  const query1 = 'INSERT INTO AddressUserPN (phoneNo) VALUES (:phoneNumber) on conflict do nothing;'\n  const query2 = 'INSERT INTO Users (username, password, phoneNo) VALUES (:username, :password, :phoneNumber);'\n  connection.query(query1,\n    {\n      type: connection.QueryTypes.INSERT,\n      replacements: {\n        phoneNumber: phoneNumber\n      }\n    })\n    .then(result => {\n      connection.query(query2,\n        {\n          type: connection.QueryTypes.INSERT,\n          replacements: {\n            username: username,\n            password: password,\n            phoneNumber: phoneNumber\n          }\n        }).then(result => {\n          // result[1] is the number of rows changed\n          res.send('/users')\n        })\n    })\n})\n\n// router.get('/users/:username', function (req, res, next) {\n//   console.log(\"creating user endpoint\")\n//   const username = req.params.username\n//   console.log('username: ' + username)\n//   const query = 'SELECT * FROM Users WHERE username = :username ;'\n//   connection.query(query, \n//     { \n//       type: connection.QueryTypes.SELECT,\n//       replacements: {\n//         username: username\n//       }\n//     })\n//     .then(user => {\n//       console.log('redirect')\n//       // res.redirect('/users')\n//       // res.send(req.get('referer'))\n//       res.json(user[0])\n//     }).catch(err => {\n//       console.log(err)\n//     })\n// })\n\n/* GET user by ID. */\nrouter.get('/users/:username', function (req, res, next) {\n  const username = req.params.username\n  console.log('username: ' + username)\n  const query = 'SELECT * FROM Users WHERE username = :username ;'\n  connection.query(query, \n    { \n      type: connection.QueryTypes.SELECT,\n      replacements: {\n        username: username\n      }\n    })\n    .then(user => {\n      if (user.length === 1) {\n        const password = user[0].password\n        console.log(user)\n        console.log('password: ' + password)\n        let autoHeader = req.headers['authorization']\n        if (autoHeader === undefined || autoHeader.split(' ')[0] !== 'Basic') {\n          res.header('WWW-Authenticate', 'Basic realm=\"Basic Auth!\"')\n          res.send(401)\n          return next()\n        }\n        let user_pass = Buffer.from(autoHeader.split(' ')[1], 'base64').toString()\n        console.log(user_pass)\n        if (user_pass !== username + ':' + password) {\n          res.header('WWW-Authenticate', 'Basic realm=\"Wrong password!\"')\n          res.send(401)\n          return next()\n        }\n        res.json(user[0])\n      } else {\n        res.status(404).json({})\n      }\n    })\n})\n\nrouter.post('/users/:username', bodyParser.json(), function (req, res, next) {\n  // const userid = req.body.data.userid\n  const username = req.params.username\n  // const password = req.body.data.password\n  if (!req.body.data) {\n    const query = 'SELECT * FROM pet p, users u, lost l WHERE p.uid=u.userid AND u.username=:username AND p.pid=l.pid;'\n    connection.query(query,\n      {\n        type: connection.QueryTypes.UPDATE,\n        replacements: {\n          username: username\n        }\n      })\n      .then(result => {\n        console.log(result)\n        res.json(result[0])\n      })\n  } else {\n    const pid = req.body.data.pid\n    const date = new Date()\n    const dd = date.getDate()\n    let mm\n    if (date.getMonth < 10) {\n      mm = '0' + date.getMonth() + 1\n    } else {\n      mm = date.getMonth() + 1\n    }\n    const yyyy = date.getFullYear()\n    const day = yyyy + '-' + mm + '-' + dd\n    let hh = date.getHours()\n    let mins = date.getMinutes()\n    let ss = date.getSeconds()\n    if (hh < 10) {\n      hh = '0' + hh\n    }\n    if (mins < 10) {\n      mins = '0' + mins\n    }\n    if (ss < 10) {\n      ss = '0' + ss\n    }\n    const time = hh + ':' + mins + ':' + ss\n    const query = 'DELETE FROM lost WHERE pid=:pid; INSERT INTO found (pid, founddate, foundtime) VALUES '\n    + '(:pid, :day, :time) ;'\n    connection.query(query,\n      {\n        type: connection.QueryTypes.DELETE,\n        replacements: {\n          pid: pid,\n          day: day,\n          time: time\n        }\n      })\n      .then(result => {\n        // result[1] is the number of rows changed\n        // res.send(req.get('referer'));\n        res.json(result)\n      })\n  }\n})\n\nrouter.post('/users', bodyParser.json(), function (req, res, next) {\n  const userid = req.body.data.userid\n  const query = 'DELETE FROM Users WHERE userid = :userid;'\n  connection.query(query,\n    {\n      type: connection.QueryTypes.DELETE,\n      replacements: {\n        userid: userid\n      }\n    })\n    .then(result => {\n      // result[1] is the number of rows changed\n      res.send(req.get('referer'));\n    })\n})\n\nexport default router\n\n\n\n// WEBPACK FOOTER //\n// ./server/api/users.js","module.exports = require(\"sequelize\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"sequelize\"\n// module id = 7\n// module chunks = 0","import { Router } from 'express'\nvar connection = require('../configs/sequelize')\nconst bodyParser = require('body-parser')\n\nconst router = Router()\n\n/* GET pets listing. */\nrouter.get('/lost', function (req, res, next) {\n  const query = 'SELECT * FROM Pet, Lost WHERE Pet.pid = Lost.pid;'\n  connection.query(query, { type: connection.QueryTypes.SELECT })\n    .then(lost => {\n      // console.log(lost)\n      res.json(lost)\n    })\n})\n\n/* GET lost pets within radius. */\n/* router.get('/lost', function (req, res, next) {\n  const lat = req.body.data.lat\n  const lon = req.body.data.lon\n  const radius = req.body.data.radius\n  const query = 'SELECT *, SQRT(ABS(lostLat-:lat)*ABS(lostLat-:lat)'\n                         + 'ABS(lostLon-:lon)*ABS(lostLon-:lon))' \n                         + 'AS distance FROM Pet WHERE distance <= radius ;'\n  connection.query(query, { type: connection.QueryTypes.SELECT })\n    .then(lost => {\n      console.log(lost)\n      res.json(lost)\n    })\n}) */\n\nrouter.get('/lost/:pid', function (req, res, next) {\n  const pid = req.params.pid\n  const query = 'SELECT * FROM Pet, Lost WHERE Pet.pid = :pid and Pet.pid = Lost.pid;'\n  connection.query(query, \n    { \n      type: connection.QueryTypes.SELECT,\n      replacements: {\n        pid: pid\n      }\n    })\n    .then(pet => {\n      if (pet.length === 1 ) {\n        console.log(pet)\n        res.json(pet[0])\n      } else {\n        res.status(404).json({})\n      }\n    })\n    .catch(function(err) {\n      console.log(err, null)\n    });\n})\n\n/* GET pets listing. */\nrouter.get('/lost/add/reward-summary', function (req, res, next) {\n  const query = 'SELECT animalType, avg(amount) FROM reward, pet, pettype WHERE Reward.pid = Pet.pid and PetType.breed = Pet.breed GROUP BY animaltype;'\n  connection.query(query, { type: connection.QueryTypes.SELECT })\n    .then(reward => {\n      console.log(reward)\n      res.json(reward)\n    })\n})\n\nrouter.get('/lost/:pid/sightings/all', function (req, res, next) {\n  const pid = req.params.pid\n  const query = 'SELECT * FROM Sighting WHERE Sighting.pid = :pid;'\n  connection.query(query, \n    { \n      type: connection.QueryTypes.SELECT,\n      replacements: {\n        pid: pid\n      }\n    })\n    .then(sightings => {\n      console.log('got sightings')\n      console.log(sightings)\n      res.json(sightings)\n    })\n    .catch(function(err) {\n      console.log(err, null)\n    });\n})\n/*\nrouter.post('/lost/update', bodyParser.json(), function (req, res, next) {\n  const userid = req.body.data.userid\n  const username = req.body.data.username\n  const password = req.body.data.password\n\n  const query = 'UPDATE Pets SET username = :username, password = :password WHERE userid = :userid ;'\n  connection.query(query,\n    {\n      type: connection.QueryTypes.UPDATE,\n      replacements: {\n        username: username,\n        password: password,\n        userid: userid\n      }\n    })\n    .then(result => {\n      // result[1] is the number of rows changed\n      res.send('/lost')\n    })\n})\n*/\n\nrouter.post('/lost/delete/:pid', bodyParser.json(), function (req, res, next) {\n  const pid = req.params.pid\n  const query = 'DELETE FROM Lost WHERE pid = :pid;'\n  connection.query(query, { \n    type: connection.QueryTypes.DELETE,\n    replacements: {\n     pid: pid\n    }\n  })\n    .then(lost => {\n      console.log(lost)\n      res.json(lost)\n    })\n})\n\nrouter.post('/lost', bodyParser.json(), function (req, res, next) {\n  // const pid = req.body.data.pid\n  // \n  const lat = req.body.data.lostLat\n  const lon = req.body.data.lostLong\n  const radius = req.body.data.radius\n  const query = 'SELECT * FROM lost l, pet p WHERE SQRT((lostLat-:lat)*(lostLat-:lat) + (lostLong-:lon)*(lostLong-:lon)) <= :radius '\n                + 'AND l.pid = p.pid'\n  connection.query(query, { \n    type: connection.QueryTypes.SELECT,\n    replacements: {\n      lat: lat,\n      lon: lon,\n      radius: radius\n    }\n  })\n    .then(lost => {\n      console.log(lost)\n      res.json(lost)\n    })\n    // .then(result => {\n    //   // result[1] is the number of rows changed\n    //   res.send('/lost')\n    // })\n})\n\nrouter.post('/lost/add', bodyParser.json(), function (req, res, next) {\n  console.log(req.body.data)\n  const species = req.body.data.species\n  const breed = req.body.data.breed\n  const name = req.body.data.name\n  const sex = req.body.data.sex\n  const dob = req.body.data.birthDate\n  const time = req.body.data.lostTime\n  const date = req.body.data.lostDate\n  const lat = req.body.data.lostLat\n  const long = req.body.data.lostLong\n  const reward = req.body.data.reward\n  const uid = req.body.data.uid\n\n  console.log('adding lost pet...')\n\n  const query = 'INSERT INTO pettype (breed, animalType) VALUES (:breed, :species) on conflict (breed) do nothing;'\n  const query2 = 'INSERT INTO pet (uid, name, sex, breed, birthDate, regDate) VALUES (:uid, :name, :sex, :breed, :dob, CURRENT_DATE) ;'\n  const query3 = 'INSERT INTO lost (pid, lostDate, lostTime, lostLat, lostLong) VALUES ((SELECT currval(\\'pet_pid_seq\\')), :date, :time, :lat, :long) ;'\n  const query4 = 'INSERT INTO reward (uid, pid, amount) VALUES (:uid, (SELECT currval(\\'pet_pid_seq\\')), :reward);'\n  connection.query(query,\n    {\n      type: connection.QueryTypes.INSERT,\n      replacements: {\n        species: species,\n        breed: breed\n      }\n    })\n    .then(result => {\n      connection.query(query2,\n      {\n        type: connection.QueryTypes.INSERT,\n        replacements: {\n          name: name,\n          sex: sex,\n          breed: breed,\n          dob: dob,\n          uid: uid\n        }\n      })\n      .then(result => {\n        connection.query(query3,\n        {\n          type: connection.QueryTypes.INSERT,\n          replacements: {\n            name: name,\n            date: date,\n            time: time,\n            lat: lat,\n            long: long\n          }\n        })\n        .then(result => {\n          connection.query(query4,\n            {\n              type: connection.QueryTypes.INSERT,\n              replacements: {\n                reward: reward,\n                uid: uid\n              }\n            }).then (result => {res.send('/lost')})\n        })\n      })\n    })\n    .catch( error => {\n      console.log(\"encountered an error\")\n      console.log(error)});\n})\n\nrouter.get('/lost/:pid/sighting', function (req, res, next) {\n  const pid = req.params.pid\n  const response = {\n    errors: [],\n    uid: '',\n    pid: pid,\n    date: '',\n    time: '',\n    latitude: '',\n    longitude: ''\n  }\n  res.json( response )\n})\n\nrouter.post('/lost/sighting', bodyParser.json(), function (req, res, next) {\n  console.log('got request')\n  console.log(req.body.data)\n  const uid = req.body.data.uid\n  const pid = req.body.data.pid\n  const time = req.body.data.time\n  const date = req.body.data.date\n  const lat = req.body.data.latitude\n  const long = req.body.data.longitude\n  const desc = req.body.data.description\n  const query = 'INSERT INTO sighting (date, time, lat, long, description, pid, uid) VALUES (:date, :time, :lat, :long, :desc, :pid, :uid) ;'\n  connection.query(query, { \n    type: connection.QueryTypes.INSERT,\n    replacements: {\n      date: date,\n      time: time,\n      lat: lat,\n      long: long,\n      desc: desc,\n      uid: uid,\n      pid: pid\n    }\n  })\n    .then(lost => {\n      console.log(lost)\n      res.json(lost)\n    })\n    // .then(result => {\n    //   // result[1] is the number of rows changed\n    //   res.send('/lost')\n    // })\n})\n\nexport default router\n\n\n\n// WEBPACK FOOTER //\n// ./server/api/lost.js","import { Router } from 'express'\nimport * as fs from \"fs\"\nvar connection = require('../configs/sequelize')\nconst bodyParser = require('body-parser')\n\nconst router = Router()\n\n/* GET users listing. */\nrouter.get('/users', function (req, res, next) {\n  const query = 'SELECT * FROM Users;'\n  connection.query(query, { type: connection.QueryTypes.SELECT })\n    .then(users => {\n      console.log(users)\n      res.json(users)\n    })\n})\n\nrouter.get('/signin', function (req, res, next) {\n  let autoHeader = req.headers['authorization']\n  if (autoHeader === undefined || autoHeader.split(' ')[0] !== 'Basic') {\n    res.header('WWW-Authenticate', 'Basic realm=\"Basic Auth!\"')\n    res.send(401)\n    return next()\n  }\n  let user_pass = Buffer.from(autoHeader.split(' ')[1], 'base64').toString()\n  const username = user_pass.split(':')[0]\n  const query = 'SELECT * FROM Users WHERE username = :username ;'\n  connection.query(query, \n    { \n      type: connection.QueryTypes.SELECT,\n      replacements: {\n        username: username\n      }\n    })\n    .then(user => {\n      if (user.length === 1) {\n        const password = user[0].password\n        if (user_pass !== username + ':' + password) {\n          res.header('WWW-Authenticate', 'Basic realm=\"Wrong password!\"')\n          res.send(401)\n          return next()\n        }\n        res.json(username)\n      } else {\n        res.status(404).json({})\n      }\n    })\n})\n\n/* GET user by ID. */\n// router.get('/users/:username', function (req, res, next) {\n//   const username = req.params.username\n//   const query = 'SELECT * FROM Users WHERE username = :username ;'\n//   connection.query(query, \n//     { \n//       type: connection.QueryTypes.SELECT,\n//       replacements: {\n//         username: username\n//       }\n//     })\n//     .then(user => {\n//       if (user.length === 1 ) {\n//         res.json(user[0])\n//       } else {\n//         res.status(404).json({})\n//       }\n//     })\n// })\n\nrouter.post('/users/update', bodyParser.json(), function (req, res, next) {\n  const userid = req.body.data.userid\n  const username = req.body.data.username\n  const password = req.body.data.password\n\n  const query = 'UPDATE Users SET username = :username, password = :password WHERE userid = :userid ;'\n  connection.query(query,\n    {\n      type: connection.QueryTypes.UPDATE,\n      replacements: {\n        username: username,\n        password: password,\n        userid: userid\n      }\n    })\n    .then(result => {\n      // result[1] is the number of rows changed\n      res.send('/users')\n    })\n})\n\nrouter.post('/main', bodyParser.json(), function (req, res, next) {\n  // const userid = req.body.data.userid\n  const query = fs.readFileSync(\"./db/CreateUsersTable.sql\", \"utf-8\");\n  connection.query(query,\n    {\n      type: connection.QueryTypes.DELETE\n    })\n    .then(result => {\n      // result[1] is the number of rows changed\n      res.send('/')\n    })\n})\n\nrouter.post('/users/add', bodyParser.json(), function (req, res, next) {\n  const userid = req.body.data.userid\n  const username = req.body.data.username\n  const password = req.body.data.password\n\n  const query = 'INSERT INTO Users (username, password) VALUES (:username, :password) ;'\n  connection.query(query,\n    {\n      type: connection.QueryTypes.INSERT,\n      replacements: {\n        username: username,\n        password: password\n      }\n    })\n    .then(result => {\n      // result[1] is the number of rows changed\n      res.send('/users')\n    })\n})\n\n/* GET pets listing. */\nrouter.get('/reward-summary', function (req, res, next) {\n  const query = 'SELECT animalType, round(avg(amount)::numeric,2) AS amount FROM reward, pet, pettype WHERE Reward.pid = Pet.pid and PetType.breed = Pet.breed GROUP BY animaltype;'\n  connection.query(query, { type: connection.QueryTypes.SELECT })\n    .then(reward => {\n      console.log(reward)\n      res.json(reward)\n    })\n})\n\nexport default router\n\n\n\n// WEBPACK FOOTER //\n// ./server/api/main.js","module.exports = require(\"fs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"fs\"\n// module id = 10\n// module chunks = 0","import { Router } from 'express'\nvar connection = require('../configs/sequelize')\nconst bodyParser = require('body-parser')\n\nconst router = Router()\n\n/* GET pets listing. */\nrouter.get('/shelters', function (req, res, next) {\n  const query = 'SELECT * FROM Shelter;'\n  connection.query(query, { type: connection.QueryTypes.SELECT })\n    .then(shelters => {\n      console.log(shelters)\n      res.json(shelters)\n    })\n})\n\nrouter.get('/shelters/:agencyname/:postalcode', function (req, res, next) {\n  const postalCode = req.params.postalcode\n  const agencyname = req.params.agencyname\n  console.log(\"pc: \" + postalCode + \"   agency: \" + agencyname)\n  const query = 'SELECT * FROM Shelter WHERE agencyname=:agencyname'\n  connection.query(query,\n    {\n      type: connection.QueryTypes.SELECT,\n      replacements: {\n        agencyname: agencyname\n      }\n    })\n    .then(usernames => {\n      console.log(usernames)\n      res.json(usernames)\n    })\n})\n\nrouter.post('/shelters/:agencyname/:postalcode', bodyParser.json(), function (req, res, next) {\n  const postalCode = req.params.postalcode\n  const agencyname = req.params.agencyname\n  const breed = req.body.data.breed\n  console.log(\"pc: \" + postalCode + \"   agency: \" + agencyname + \"   breed: \" + breed)\n  const query = 'SELECT u.username FROM adoption a, sheltered s, pet p, users u '\n                + 'WHERE a.uid=u.userid AND a.tid=s.tid AND s.postalcode=:postalCode '\n                + 'AND s.agencyname=:agencyname AND p.breed=:breed;'\n  connection.query(query,\n    {\n      type: connection.QueryTypes.SELECT,\n      replacements: {\n        breed: breed,\n        postalCode: postalCode,\n        agencyname: agencyname\n      }\n    })\n    .then(usernames => {\n      console.log(usernames)\n      res.json(usernames)\n    })\n    .catch(error => {\n      console.log(\"Error: \" + error)\n    })\n})\n\n/* GET user by ID. */\nrouter.get('/shelters/:agencyname', function (req, res, next) {\n  console.log(\"getting campuses...\")\n  const agencyname = req.params.agencyname\n  const query = 'SELECT * FROM campus WHERE agencyname = :agencyname ;'\n  connection.query(query, \n    { \n      type: connection.QueryTypes.SELECT,\n      replacements: {\n        agencyname: agencyname\n      }\n    })\n    .then(agency => {\n      console.log(agency)\n      res.json(agency)\n    })\n    .catch(function(err) {\n      console.log(err, null)\n    });\n})\n/*\nrouter.post('/lost/update', bodyParser.json(), function (req, res, next) {\n  const userid = req.body.data.userid\n  const username = req.body.data.username\n  const password = req.body.data.password\n\n  const query = 'UPDATE Pets SET username = :username, password = :password WHERE userid = :userid ;'\n  connection.query(query,\n    {\n      type: connection.QueryTypes.UPDATE,\n      replacements: {\n        username: username,\n        password: password,\n        userid: userid\n      }\n    })\n    .then(result => {\n      // result[1] is the number of rows changed\n      res.send('/lost')\n    })\n})\n*/\n\nrouter.post('/lost', bodyParser.json(), function (req, res, next) {\n  // const pid = req.body.data.pid\n  // const query = 'DELETE FROM Pets WHERE pid = :pid;'\n  const lat = req.body.data.lostLat\n  const lon = req.body.data.lostLong\n  const radius = req.body.data.radius\n  const query = 'SELECT * FROM lost l, pet p WHERE SQRT((lostLat-:lat)*(lostLat-:lat) + (lostLong-:lon)*(lostLong-:lon)) <= :radius '\n                + 'AND l.pid = p.pid'\n  connection.query(query, { \n    type: connection.QueryTypes.SELECT,\n    replacements: {\n      lat: lat,\n      lon: lon,\n      radius: radius\n    }\n  })\n    .then(lost => {\n      console.log(lost)\n      res.json(lost)\n    })\n    // .then(result => {\n    //   // result[1] is the number of rows changed\n    //   res.send('/lost')\n    // })\n})\n\nrouter.post('/lost/add', bodyParser.json(), function (req, res, next) {\n  console.log(req.body.data)\n  const pid = req.body.data.pid\n  const species = req.body.data.species\n  const breed = req.body.data.breed\n  const name = req.body.data.name\n  const sex = req.body.data.sex\n\n  console.log('adding lost pet...')\n\n  const query = 'INSERT INTO pettype (breed, animalType) VALUES (:breed, :species) on conflict (breed) do nothing;'\n  const query2 = 'INSERT INTO pet (name, sex, breed) VALUES (:name, :sex, :breed) ;'\n  const query3 = 'INSERT INTO lost (pid) VALUES ((SELECT p.pid FROM pet p where p.name = :name)) ;'\n  connection.query(query,\n    {\n      type: connection.QueryTypes.INSERT,\n      replacements: {\n        species: species,\n        breed: breed\n      }\n    })\n    .then(result => {\n      connection.query(query2,\n      {\n        type: connection.QueryTypes.INSERT,\n        replacements: {\n          name: name,\n          sex: sex,\n          breed: breed\n        }\n      })\n      .then(result => {\n        connection.query(query3,\n        {\n          type: connection.QueryTypes.INSERT,\n          replacements: {\n            pid: pid,\n            name: name\n          }\n        })\n        .then(result => {\n          // result[1] is the number of rows changed\n          res.send('/lost')\n        })\n      })\n    })\n    .catch( error => {\n      console.log(\"encountered an error\")\n      console.log(error)});\n})\n\nexport default router\n\n\n\n// WEBPACK FOOTER //\n// ./server/api/shelters.js","module.exports = {\n  /*\n  ** Headers of the page\n  */\n  head: {\n    title: 'starter',\n    meta: [\n      { charset: 'utf-8' },\n      { name: 'viewport', content: 'width=device-width, initial-scale=1' },\n      { hid: 'description', name: 'description', content: 'Nuxt.js project' }\n    ],\n    link: [\n      { rel: 'icon', type: 'image/x-icon', href: '/favicon.ico' }\n    ]\n  },\n  /*\n  ** Global CSS\n  */\n  css: ['~/assets/css/main.css'],\n  /*\n  ** Add axios globally\n  */\n  build: {\n    vendor: ['axios'],\n    /*\n    ** Run ESLINT on save\n    */\n    extend (config, ctx) {\n      if (ctx.isClient) {\n        config.module.rules.push({\n          enforce: 'pre',\n          test: /\\.(js|vue)$/,\n          loader: 'eslint-loader',\n          exclude: /(node_modules)/\n        })\n      }\n    }\n  },\n\n  modules: [\n    '@nuxtjs/pwa'\n  ]\n}\n\n\n\n// WEBPACK FOOTER //\n// ./nuxt.config.js"],"sourceRoot":""}